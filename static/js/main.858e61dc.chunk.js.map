{"version":3,"sources":["CounterFeedback/Statistics/Statistics.module.css","CounterFeedback/CounterFeedback.module.css","CounterFeedback/Section/Section.module.css","CounterFeedback/FeedbackOptions/FeedbackOptions.module.css","CounterFeedback/Notification/Notification.module.css","CounterFeedback/Section/Section.js","CounterFeedback/Statistics/Statistics.js","CounterFeedback/FeedbackOptions/FeedbackOptions.js","CounterFeedback/Notification/Notification.js","CounterFeedback/CounterFeedbac.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","Statistics","good","neutral","bad","total","positivePercentage","statList","statItem","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","type","onClick","slice","toUpperCase","Notification","message","notification","CounterFeedbac","goodFeedback","neutralFeedback","badFeedback","percentage","hendleClick","CounterFeedback","countInitialState","countReducer","state","action","payload","App","useReducer","dispatch","Math","round","Number","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.858e61dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3ZjL5\",\"statItem\":\"Statistics_statItem__3f7pR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterFeedback\":\"CounterFeedback_CounterFeedback__1T6_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__26hpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__1m7Ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3LLzV\"};","import React from \"react\";\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ( { title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n     return (\r\n    <ul className={styles.statList}>\r\n        <li className={styles.statItem}>Good: {good}</li>\r\n        <li className={styles.statItem}>Neutral: {neutral}</li>\r\n        <li className={styles.statItem}>Bad: {bad}</li>\r\n        <li className={styles.statItem}>Total: {total}</li>\r\n        <li className={styles.statItem}>Positive feedback: {positivePercentage > 0 ? positivePercentage : 0}%</li>\r\n    </ul>\r\n     );\r\n};\r\n\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}","import React from 'react';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <ul className={styles.buttonList}>\r\n            {options.map((option) => {\r\n                return (\r\n                    <li key={option}>\r\n                        <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            onLeaveFeedback(option);\r\n                        }}>\r\n                        {option.slice(0, 1).toUpperCase() + option.slice(1)}\r\n                        </button>\r\n                    </li>\r\n                );\r\n            })}\r\n    \r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport styles from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Notification = ( { message }) => {\r\n    return(\r\n        <p className={styles.notification}>{message}</p>\r\n    );\r\n}\r\n\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import React from 'react';\r\nimport styles from './CounterFeedback.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Section from './Section';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Notification from './Notification';\r\n\r\n\r\nconst CounterFeedbac = ({\r\n    goodFeedback, \r\n    neutralFeedback, \r\n    badFeedback,\r\n    total, \r\n    percentage,\r\n    hendleClick,\r\n    options,\r\n }) => {\r\n        return (\r\n            <div className={styles.CounterFeedback}>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions options={options} onLeaveFeedback={hendleClick} />\r\n                </Section>\r\n                {total > 0 ? (\r\n                    <Section title=\"Statistics\">\r\n                        <Statistics\r\n                            good={goodFeedback}\r\n                            neutral={neutralFeedback}\r\n                            bad={badFeedback}\r\n                            total={total}\r\n                            positivePercentage={percentage}\r\n                        />\r\n                    </Section>\r\n                ) : (\r\n                    <Notification message=\"No feedback given\" />\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default CounterFeedbac;\r\n\r\nCounterFeedbac.propTypes = {\r\n    goodFeedback: PropTypes.number, \r\n    neutralFeedback: PropTypes.number,\r\n    badFeedback: PropTypes.number,\r\n    total: PropTypes.number, \r\n    percentage: PropTypes.number,\r\n    hendleClick: PropTypes.func,\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n\r\n}","import {useReducer} from \"react\";\nimport CounterFeedback from \"./CounterFeedback\";\n\n\nconst countInitialState = {\n  \n    good: 0,\n    neutral: 0,\n    bad: 0\n  \n};\n \nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'good':\n      return { ...state, good: state.good + action.payload };\n    case 'neutral':\n      return { ...state, neutral: state.neutral + action.payload };\n        case 'bad':\n      return { ...state, bad: state.bad + action.payload };\n    default:\n      return;\n    }\n\n  };\n\nexport default function App() {\n  const [state, dispatch] = useReducer(countReducer, countInitialState);\n\n  const total = state.good + state.neutral + state.bad;\n  const percentage = Math.round((Number(state.good) / Number(total)) * 100);\n  \n  const options = Object.keys(state)\n  \n\n  const handleClick = (option) => {\n     dispatch({type: option, payload: 1})\n  };\n\n\n  return (\n    < CounterFeedback \n        goodFeedback={state.good}\n        neutralFeedback={state.neutral}\n        badFeedback={state.bad}\n        total={total}\n        percentage={percentage}\n        hendleClick={handleClick}\n        options={options} \n      />\n  )\n }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}